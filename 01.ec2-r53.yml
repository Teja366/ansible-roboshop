- name: create ec2 and r53
  hosts: local
  connection: local
  vars:
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-0567d444e59804edd
    zone_id: "AKIAUSZNFK5TLDBSPZKG"
    domain_name: "devopswithbnvst.uno"

    # can pass instnaces in command line 
    # instances:
    # - mongodb
    # - redis
    # - mysql
    # - rabbitmq

  tasks: 
  - name: create ec2 user instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        Name: "{{ item }}"
    loop: "{{ instances }}"
    register: ec2_output

  - name: print the e2c output
    ansible.builtin.debug:
      msg: "{{ ec2_output }}"

  # - name: print public_ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].public_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  # - name: print private_ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].private_ip_address }}"
  #   loop: "{{ ec2_output.results }}"
  # tasks: 
  - name: create route53 record
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item }}.{{ domain_name }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}" 
      overwrite: true
    loop: "{{ ec2_output.results }}"


#we are creating one record with public for frontend 
  - name: create route53 record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}" 
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"

